package com.ddz.domain.mapper;

import com.ddz.domain.entity.UserEntity;
import com.ddz.domain.entity.UserEntityExample;
import java.io.Serializable;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;

public interface UserEntityMapper extends Serializable {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    long countByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    int deleteByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    @Delete({
        "delete from t_user",
        "where F_USER_ID = #{userId,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    @Insert({
        "insert into t_user (F_USER_NAME, F_PASSWORD, ",
        "F_NICK_NAME, F_WX_OPENID, ",
        "F_WX_UNIONID, F_USER_UUID, ",
        "F_AVATAR, F_SEX, F_PROVICE_ID, ",
        "F_CITY_ID, F_DISTRICT_ID, ",
        "F_STREET_ID, F_ADDRESS, ",
        "F_TEL, F_STATUS, F_VOICE_TOTAL, ",
        "F_VOICE_COUNT, F_INDATE, ",
        "F_UPDATE_TIME)",
        "values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{nickName,jdbcType=VARCHAR}, #{wxOpenid,jdbcType=VARCHAR}, ",
        "#{wxUnionid,jdbcType=VARCHAR}, #{userUuid,jdbcType=VARCHAR}, ",
        "#{avatar,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{proviceId,jdbcType=INTEGER}, ",
        "#{cityId,jdbcType=INTEGER}, #{districtId,jdbcType=INTEGER}, ",
        "#{streetId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, ",
        "#{tel,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{voiceTotal,jdbcType=BIGINT}, ",
        "#{voiceCount,jdbcType=BIGINT}, #{indate,jdbcType=TIMESTAMP}, ",
        "#{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="userId", before=false, resultType=Long.class)
    int insert(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    int insertSelective(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    List<UserEntity> selectByExample(UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    @Select({
        "select",
        "F_USER_ID, F_USER_NAME, F_PASSWORD, F_NICK_NAME, F_WX_OPENID, F_WX_UNIONID, ",
        "F_USER_UUID, F_AVATAR, F_SEX, F_PROVICE_ID, F_CITY_ID, F_DISTRICT_ID, F_STREET_ID, ",
        "F_ADDRESS, F_TEL, F_STATUS, F_VOICE_TOTAL, F_VOICE_COUNT, F_INDATE, F_UPDATE_TIME",
        "from t_user",
        "where F_USER_ID = #{userId,jdbcType=BIGINT}"
    })
    @ResultMap("com.ddz.domain.mapper.UserEntityMapper.BaseResultMap")
    UserEntity selectByPrimaryKey(Long userId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    int updateByExampleSelective(@Param("record") UserEntity record, @Param("example") UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    int updateByExample(@Param("record") UserEntity record, @Param("example") UserEntityExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    int updateByPrimaryKeySelective(UserEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user
     *
     * @mbg.generated Sat Apr 04 11:02:05 CST 2020
     */
    @Update({
        "update t_user",
        "set F_USER_NAME = #{userName,jdbcType=VARCHAR},",
          "F_PASSWORD = #{password,jdbcType=VARCHAR},",
          "F_NICK_NAME = #{nickName,jdbcType=VARCHAR},",
          "F_WX_OPENID = #{wxOpenid,jdbcType=VARCHAR},",
          "F_WX_UNIONID = #{wxUnionid,jdbcType=VARCHAR},",
          "F_USER_UUID = #{userUuid,jdbcType=VARCHAR},",
          "F_AVATAR = #{avatar,jdbcType=VARCHAR},",
          "F_SEX = #{sex,jdbcType=VARCHAR},",
          "F_PROVICE_ID = #{proviceId,jdbcType=INTEGER},",
          "F_CITY_ID = #{cityId,jdbcType=INTEGER},",
          "F_DISTRICT_ID = #{districtId,jdbcType=INTEGER},",
          "F_STREET_ID = #{streetId,jdbcType=INTEGER},",
          "F_ADDRESS = #{address,jdbcType=VARCHAR},",
          "F_TEL = #{tel,jdbcType=VARCHAR},",
          "F_STATUS = #{status,jdbcType=INTEGER},",
          "F_VOICE_TOTAL = #{voiceTotal,jdbcType=BIGINT},",
          "F_VOICE_COUNT = #{voiceCount,jdbcType=BIGINT},",
          "F_INDATE = #{indate,jdbcType=TIMESTAMP},",
          "F_UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}",
        "where F_USER_ID = #{userId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(UserEntity record);
}